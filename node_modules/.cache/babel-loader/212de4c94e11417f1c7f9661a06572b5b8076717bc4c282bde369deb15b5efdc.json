{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iulia\\\\Doughnut-Time\\\\src\\\\components\\\\Doughnuts\\\\Categories\\\\DoughnutsVegan\\\\AvailableDoughnutsVegan.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport DoughnutItem from \"../../DoughnutItem/DoughnutItem\";\nimport classes from '../../AvailableDoughnuts.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableDoughnutsVegan = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://doughnuts-project-default-rtdb.europe-west1.firebasedatabase.app/doughnuts.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          image: responseData[key].image,\n          price: responseData[key].price,\n          category: responseData[key].category\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n    fetchMeals();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.DoughnutsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.DoughnutsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this);\n  }\n  const mealsListVegan = meals.filter(meal => meal.category === \"vegan\");\n  const mealsList = mealsListVegan.map(meal => /*#__PURE__*/_jsxDEV(DoughnutItem, {\n    id: meal.id,\n    name: meal.name,\n    image: meal.image,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.doughnuts,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: mealsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 13\n  }, this);\n};\n_s(AvailableDoughnutsVegan, \"GNhuq97CrYTRGtb4EdV+fANyLyQ=\");\n_c = AvailableDoughnutsVegan;\nexport default AvailableDoughnutsVegan;\nvar _c;\n$RefreshReg$(_c, \"AvailableDoughnutsVegan\");","map":{"version":3,"names":["React","useEffect","useState","DoughnutItem","classes","AvailableDoughnutsVegan","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","image","price","category","catch","error","message","DoughnutsLoading","DoughnutsError","mealsListVegan","filter","meal","mealsList","map","doughnuts"],"sources":["C:/Users/Iulia/Doughnut-Time/src/components/Doughnuts/Categories/DoughnutsVegan/AvailableDoughnutsVegan.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport DoughnutItem from \"../../DoughnutItem/DoughnutItem\";\r\nimport classes from '../../AvailableDoughnuts.module.css'\r\n\r\nconst AvailableDoughnutsVegan = () => {\r\n    const [meals, setMeals] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [httpError, setHttpError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchMeals = async () => {\r\n            const response = await fetch('https://doughnuts-project-default-rtdb.europe-west1.firebasedatabase.app/doughnuts.json');\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong!')\r\n            }\r\n\r\n            const responseData = await response.json();\r\n\r\n            const loadedMeals = [];\r\n\r\n            for (const key in responseData) {\r\n                loadedMeals.push({\r\n                    id: key,\r\n                    name: responseData[key].name,\r\n                    image: responseData[key].image,\r\n                    price: responseData[key].price,\r\n                    category: responseData[key].category\r\n                })\r\n            }\r\n            setMeals(loadedMeals);\r\n            setIsLoading(false);\r\n        };\r\n\r\n\r\n        fetchMeals().catch(error => {\r\n            setIsLoading(false)\r\n            setHttpError(error.message)\r\n        })\r\n\r\n        fetchMeals();\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (<section className={classes.DoughnutsLoading}><p>Loading...</p></section>);\r\n    }\r\n\r\n    if (httpError) {\r\n        return (<section className={classes.DoughnutsError}><p>{httpError}</p></section>);\r\n    }\r\n\r\n    const mealsListVegan = meals.filter(meal => meal.category === \"vegan\")\r\n    const mealsList = mealsListVegan.map(meal =>\r\n        <DoughnutItem\r\n            id={meal.id}\r\n            key={meal.id}\r\n            name={meal.name}\r\n            image={meal.image}\r\n            price={meal.price} />\r\n    )\r\n\r\n\r\n\r\n    return (<section className={classes.doughnuts}>\r\n\r\n        <ul>\r\n            {mealsList}\r\n        </ul>\r\n\r\n    </section>\r\n\r\n    )\r\n};\r\n\r\nexport default AvailableDoughnutsVegan;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,OAAOC,OAAO,MAAM,qCAAqC;AAAA;AAEzD,MAAMC,uBAAuB,GAAG,MAAM;EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAG,YAAY;MAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yFAAyF,CAAC;MAEvH,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MAEA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAE1C,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAK,MAAMC,GAAG,IAAIH,YAAY,EAAE;QAC5BE,WAAW,CAACE,IAAI,CAAC;UACbC,EAAE,EAAEF,GAAG;UACPG,IAAI,EAAEN,YAAY,CAACG,GAAG,CAAC,CAACG,IAAI;UAC5BC,KAAK,EAAEP,YAAY,CAACG,GAAG,CAAC,CAACI,KAAK;UAC9BC,KAAK,EAAER,YAAY,CAACG,GAAG,CAAC,CAACK,KAAK;UAC9BC,QAAQ,EAAET,YAAY,CAACG,GAAG,CAAC,CAACM;QAChC,CAAC,CAAC;MACN;MACAnB,QAAQ,CAACY,WAAW,CAAC;MACrBV,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC;IAGDG,UAAU,EAAE,CAACe,KAAK,CAACC,KAAK,IAAI;MACxBnB,YAAY,CAAC,KAAK,CAAC;MACnBE,YAAY,CAACiB,KAAK,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC;IAEFjB,UAAU,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,SAAS,EAAE;IACX,oBAAQ;MAAS,SAAS,EAAEJ,OAAO,CAAC0B,gBAAiB;MAAA,uBAAC;QAAA,UAAG;MAAU;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAU;EACrF;EAEA,IAAIpB,SAAS,EAAE;IACX,oBAAQ;MAAS,SAAS,EAAEN,OAAO,CAAC2B,cAAe;MAAA,uBAAC;QAAA,UAAIrB;MAAS;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAU;EACpF;EAEA,MAAMsB,cAAc,GAAG1B,KAAK,CAAC2B,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACR,QAAQ,KAAK,OAAO,CAAC;EACtE,MAAMS,SAAS,GAAGH,cAAc,CAACI,GAAG,CAACF,IAAI,iBACrC,QAAC,YAAY;IACT,EAAE,EAAEA,IAAI,CAACZ,EAAG;IAEZ,IAAI,EAAEY,IAAI,CAACX,IAAK;IAChB,KAAK,EAAEW,IAAI,CAACV,KAAM;IAClB,KAAK,EAAEU,IAAI,CAACT;EAAM,GAHbS,IAAI,CAACZ,EAAE;IAAA;IAAA;IAAA;EAAA,QAGS,CAC5B;EAID,oBAAQ;IAAS,SAAS,EAAElB,OAAO,CAACiC,SAAU;IAAA,uBAE1C;MAAA,UACKF;IAAS;MAAA;MAAA;MAAA;IAAA;EACT;IAAA;IAAA;IAAA;EAAA,QAEC;AAGd,CAAC;AAAC,GApEI9B,uBAAuB;AAAA,KAAvBA,uBAAuB;AAsE7B,eAAeA,uBAAuB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}